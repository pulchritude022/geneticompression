{"version":3,"sources":["src/advanced-settings-view.js","src/app.js","src/blob-to-url.js","src/canvas-to-url.js","src/data-api.js","src/environment.js","src/image-selection.js","src/main-view.js","src/main.js","src/phenotype.js","src/population-view.js","src/resources/index.js","src/messages.js"],"names":["AdvancedSettingsView","api","App","configureRouter","config","router","title","map","route","moduleId","name","BlobToUrlValueConverter","toView","blob","URL","createObjectURL","CanvasToUrlValueConverter","canvas","toDataURL","INITIAL_POP_COUNT","popSize","sourceImageData","phenotypes","i","pheno","updateCanvas","push","mutationRate","DataApi","sourceLoaded","sourceImgUrl","loadSourceImg","img","console","log","sourceCanvas","document","createElement","width","height","tempImage","Image","src","onload","getContext","drawImage","Array","from","getImageData","data","evaluatePhenotypes","getPhenotypes","length","forEach","currentValue","index","array","comparePixels","sort","a","b","match","resetPhenotypes","p","randomize","getPopSize","setPopSize","size","debug","testing","ImageSelection","ea","onFilesSelected","event","target","files","publish","onStart","onReset","MainView","noImageMessage","created","population","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","math","Phenotype","url","nodeR","_getRandomOperatorNode","nodeG","nodeB","Mutate","rate","dumpFormula","R","G","B","A","getRGBAForumlas","str","toString","ctx","imageData","eqR","compile","eqG","eqB","y","x","scope","offset","eval","putImageData","getCanvas","sourceData","ctx1","matrix","ctx2","subtract","dotMultiply","sum","get","_getRandomEquation","numOps","rootNode","_getRandomConstNode","nodes","filter","node","isSymbolNode","isConstantNode","replacedNode","pickRandom","transform","path","parent","equals","VALUE_WEIGHT","CONST_WEIGHT","Math","random","X_WEIGHT","Y_WEIGHT","expression","SymbolNode","MAX_CONST","ConstantNode","round","weightedOperations","w","args","FunctionNode","PopulationView","subscribe","msg","MsgNewSourceImage","newImageFile","image","MsgSourceImageLoaded","MsgReset","MsgIterate","MsgPopSizeChanged","newPopSize","MsgPopUpdated"],"mappings":"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","file":"app-bundle.js","sourcesContent":["/**\n * Created by amccollough on 5/25/17.\n */\nimport {inject} from 'aurelia-framework'\nimport {DataApi} from './data-api'\n\n@inject(DataApi)\nexport class AdvancedSettingsView {\n  constructor (api) {\n    this.api = api;\n  }\n}\n","\nimport {inject} from 'aurelia-framework'\nimport {DataApi} from './data-api'\n\n@inject(DataApi)\nexport class App {\n  constructor (api) {\n    this.api = api;\n  }\n\n  configureRouter(config, router){\n    config.title = 'Select an Image';\n    config.map([\n      {route: '',           moduleId: 'main-view'},\n      {route: 'population', moduleId: 'population-view',        name: 'population'},\n      {route: 'settings',   moduleId: 'advanced-settings-view', name: 'advanced'}\n    ]);\n\n    this.router = router;\n  }\n}\n","/**\r\n * Created by amccollough on 5/23/17.\r\n */\r\nexport class BlobToUrlValueConverter {\r\n    toView(blob) {\r\n        return URL.createObjectURL(blob);\r\n    }\r\n}\r\n","/**\n * Created by amccollough on 5/23/17.\n */\nexport class CanvasToUrlValueConverter {\n    toView(canvas) {\n        return canvas.toDataURL();\n    }\n}\n","/**\n * Created by amccollough on 5/25/17.\n */\nimport {Phenotype} from './phenotype'\n\nconst INITIAL_POP_COUNT = 12;\n\nlet popSize = INITIAL_POP_COUNT;\nlet sourceImageData = [];\nlet phenotypes = [];\n\nfor (let i=0; i < popSize; i++) {\n  let pheno = new Phenotype(300,300);\n  pheno.updateCanvas();\n  phenotypes.push(pheno)\n}\n\nlet mutationRate = 5;\n\n\nexport class DataApi {\n  constructor () {\n    this.sourceLoaded = false;\n    this.sourceImgUrl = \"\";\n  }\n\n  loadSourceImg (img){\n    if (img) {\n      console.log(URL.createObjectURL(img));\n      this.sourceImgUrl = URL.createObjectURL(img);\n      this.sourceLoaded = true;\n\n      // Save off the Image data by transforming into a temporary canvas\n      let sourceCanvas = document.createElement(\"canvas\");\n      sourceCanvas.width = 300;\n      sourceCanvas.height = 300;\n      let tempImage = new Image (300,300);\n      tempImage.src = this.sourceImgUrl;\n      tempImage.onload = () => {\n        console.log(\"Loaded!\");\n        sourceCanvas.getContext('2d').drawImage(tempImage, 0, 0);\n        sourceImageData = Array.from (sourceCanvas.getContext('2d').getImageData(0,0,300,300).data);\n        this.evaluatePhenotypes();\n      };\n\n    }\n    else {\n      this.sourceImgUrl = \"\";\n      this.sourceLoaded = false;\n    }\n  }\n\n  getPhenotypes () {\n    return phenotypes;\n  }\n\n  evaluatePhenotypes () {\n    if (sourceImageData.length > 0){\n      phenotypes.forEach((currentValue, index, array) => {\n        console.log(index, currentValue.comparePixels(sourceImageData));\n      });\n      phenotypes.sort((a,b) => {\n        if (a.match > b.match) {\n          return -1;\n        }\n        else if (a.match < b.match) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n  }\n\n  resetPhenotypes () {\n    phenotypes.forEach((p) => {\n      p.randomize();\n      p.updateCanvas();\n    });\n  }\n\n  getPopSize () {\n    return popSize;\n  }\n\n  setPopSize (size) {\n    // Only need to update if there is a change\n    if (size != popSize) {\n      // Regenerate the population by first emptying population array\n      phenotypes = [];\n      for (let i=0; i < popSize; i++) {\n        let pheno = new Phenotype(300,300);\n        pheno.updateCanvas();\n        phenotypes.push(pheno);\n      }\n    }\n  }\n}\n\n","export default {\n  debug: true,\n  testing: true\n};\n","/**\n * Created by amccollough on 5/25/17.\n */\nimport {inject} from 'aurelia-framework'\nimport {EventAggregator} from 'aurelia-event-aggregator'\nimport {MsgNewSourceImage, MsgReset} from './messages'\nimport {DataApi} from './data-api'\n\n@inject(DataApi, EventAggregator)\nexport class ImageSelection {\n  constructor (api, ea) {\n    this.api = api;\n    this.ea = ea;\n  }\n\n  onFilesSelected (event) {\n    let img = event.target.files[0];\n    this.api.loadSourceImg (img);\n    this.ea.publish (new MsgNewSourceImage (img));\n  }\n\n  onStart () {\n    console.log (\"Start Clicked!!\");\n  }\n\n  onReset () {\n    console.log (\"Reset Clicked!\");\n    this.ea.publish (new MsgReset ());\n  }\n\n}\n","/**\n * Created by amccollough on 5/25/17.\n */\nimport {inject} from 'aurelia-framework'\nimport {DataApi} from './data-api'\n\n@inject(DataApi)\nexport class MainView {\n  constructor (api) {\n    this.api = api;\n    this.noImageMessage = \"Please select a source image.\"\n  }\n\n  created () {\n    this.population = this.api.getPhenotypes();\n  }\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","/**\n * Created by amccollough on 5/23/17.\n */\nlet math = require('mathjs');\n\nexport class Phenotype {\n  constructor (width, height) {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.url = \"\";\n    this.randomize ();\n  }\n\n  randomize () {\n    console.log (\"Randomized\");\n    this.nodeR = this._getRandomOperatorNode ();\n    this.nodeG = this._getRandomOperatorNode ();\n    this.nodeB = this._getRandomOperatorNode ();\n    this.match = 0; // current match strength against source image, range 0..1\n  }\n\n  // Rate is the mutation rate as a fraction of one ex 5% is rate = 0.05\n  Mutate (rate) {\n    // TODO Fill in the mutation functions\n\n    // Jiggle constant values\n    // Replace some constant values\n    //\n  }\n\n  dumpFormula () {\n    let R, G, B, A;\n    [R, G, B, A] = this.getRGBAForumlas ();\n    let str = `R: ${R}, G: ${G}, B: ${B}, A: ${A}`;\n    console.log(str);\n    return str;\n  }\n\n  getRGBAForumlas () {\n    return [\n      this.nodeR.toString(),\n      this.nodeG.toString(),\n      this.nodeB.toString(),\n      \"255\"\n    ];\n  }\n\n  updateCanvas () {\n    let ctx = this.canvas.getContext(\"2d\");\n    let imageData = ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n\n    let eqR = this.nodeR.compile ();\n    let eqG = this.nodeG.compile ();\n    let eqB = this.nodeB.compile ();\n\n    for (var y = 0; y < this.canvas.height; y++)\n    {\n      for (var x = 0; x < this.canvas.width; x++)\n      {\n        let scope = {\n          x: x,\n          y: y\n        }\n        var offset = y * (this.canvas.width*4) + (x * 4);\n        imageData.data[offset + 0] = eqR.eval(scope);\n        imageData.data[offset + 1] = eqG.eval(scope);\n        imageData.data[offset + 2] = eqB.eval(scope);\n        imageData.data[offset + 3] = 255;\n      }\n    }\n    ctx.putImageData(imageData,0,0);\n    this.url = this.canvas.toDataURL();\n  }\n\n  getCanvas () {\n    return this.canvas;\n  }\n\n  // sourceData must be a 360000 element array, corresponding to a 300x300 pixel image.\n  // return 0..1 -- 1 is perfect match, 0 is no match\n  comparePixels (sourceData) {\n    // Calculate the square of the distance between each pixel\n    let ctx1 = math.matrix(Array.from (this.canvas.getContext(\"2d\").getImageData(0, 0, this.canvas.width, this.canvas.height).data));\n    let ctx2 = math.matrix(sourceData);\n    ctx1 = math.subtract(ctx1, ctx2);\n    ctx1 = math.dotMultiply(ctx1, ctx1);\n    this.match = 1-((math.sum(ctx1)/math.size(ctx1).get([0]))/(255*255)) ;\n    return this.match;\n  }\n\n  _getRandomEquation (numOps) {\n    let rootNode = this._getRandomConstNode();\n    // If a single sized operator is requested, return just a cosntant, otherwise proceed\n    if (numOps >= 1) {\n      rootNode = this._getRandomOperatorNode ();\n\n      // Loop through nodes and pick a random symbol or constant node to replace with an operator node\n      for (let i = 1; i < numOps; i++) {\n        let nodes = rootNode.filter((node) => {return node.isSymbolNode || node.isConstantNode;});\n        let replacedNode = math.pickRandom(nodes);\n        rootNode.transform ((node, path, parent) => {\n          if (node.equals(replacedNode)) {\n            return this._getRandomOperatorNode ();\n          }\n          else {\n            return node;\n          }\n        });\n      }\n      return rootNode;\n    }\n    return rootNode;\n  }\n\n  _getRandomConstNode () {\n    const VALUE_WEIGHT = 1;\n    const CONST_WEIGHT = 1;\n    if (Math.random () < (VALUE_WEIGHT/(VALUE_WEIGHT+CONST_WEIGHT))) {\n      // Create a value node\n      const X_WEIGHT = 1;\n      const Y_WEIGHT = 1;\n      return (Math.random () < (X_WEIGHT/(X_WEIGHT+Y_WEIGHT))) ?\n        new math.expression.node.SymbolNode ('x') :\n        new math.expression.node.SymbolNode ('y');\n    }\n    else {\n      // Create a constant node using a rough approximation of a std distribution centered around 0\n      const MAX_CONST = 100;\n      return new math.expression.node.ConstantNode(math.round ((((Math.random() + Math.random() + Math.random() + Math.random()) - 2) / 2) * MAX_CONST, 2));\n    }\n  }\n\n  _getRandomOperatorNode () {\n    let a = this._getRandomConstNode ();\n    let b = this._getRandomConstNode ();\n    let weightedOperations = [\n      {w: 5, args: ['add', [a, b]] },\n      {w: 5, args: ['subtract', [a, b]] },\n      {w: 5, args: ['multiply', [a, b]] },\n      {w: 5, args: ['divide', [a, b]] },\n      {w: 3, args: ['pow', [a, b]] },\n      {w: 1, args: ['abs', [a]] },\n      {w: 2, args: ['cube', [a]] },\n      {w: 1, args: ['exp', [a]] },\n      {w: 1, args: ['log', [a, b]] },\n      {w: 1, args: ['pow', [a, b]] },\n      {w: 1, args: ['sign', [a]] },\n      {w: 2, args: ['sqrt', [a]] },\n      {w: 2, args: ['square', [a]] },\n      {w: 1, args: ['unaryMinus', [a]] },\n      {w: 2, args: ['sin', [a]] },\n      {w: 2, args: ['cos', [a]] },\n      {w: 2, args: ['tan', [a]] },\n      {w: 2, args: ['asin', [a]] },\n      {w: 2, args: ['acos', [a]] },\n      {w: 2, args: ['atan', [a]] },\n      {w: 2, args: ['sinh', [a]] },\n      {w: 2, args: ['cosh', [a]] },\n      {w: 2, args: ['tanh', [a]] },\n    ];\n    let args = math.pickRandom(weightedOperations, weightedOperations.map ((x) => {return x.w;})).args;\n    return new math.expression.node.FunctionNode(...args);\n  }\n}\n","/**\n * Created by amccollough on 5/25/17.\n */\nimport {inject} from 'aurelia-framework'\nimport {EventAggregator} from 'aurelia-event-aggregator'\nimport {MsgSourceImageLoaded, MsgReset} from './messages'\nimport {DataApi} from './data-api'\n\n@inject(DataApi, EventAggregator)\nexport class PopulationView {\n  constructor (api, ea) {\n    this.api = api;\n\n    ea.subscribe (MsgSourceImageLoaded, (msg) => {\n      this.api.evaluatePhenotypes ();\n    });\n\n    ea.subscribe (MsgReset, (msg) => {\n      this.api.resetPhenotypes ();\n      this.api.evaluatePhenotypes ();\n      console.log (\"Reset Complete.\");\n    });\n  }\n\n  created () {\n    this.population = this.api.getPhenotypes();\n  }\n}\n\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","/**\n * Created by amccollough on 5/30/17.\n */\n\nexport class MsgNewSourceImage {\n  constructor (newImageFile) {\n    this.image = newImageFile;\n  }\n}\n\nexport class MsgSourceImageLoaded {}\n\nexport class MsgReset {}\n\nexport class MsgIterate {\n\n}\n\nexport class MsgPopSizeChanged {\n  constructor (newPopSize) {\n    this.size = newPopSize;\n  }\n}\n\nexport class MsgPopUpdated {\n\n}\n"],"sourceRoot":".."}